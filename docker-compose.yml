## Comando para executar
## docker-compose --env-file .env up

version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    networks:
      - drone-net
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    hostname: broker
    ports:
      # To learn about configuring Kafka for access across networks see
      # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
    networks:
      - drone-net
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    container_name: kafdrop
    networks:
      - drone-net
    depends_on:
      - broker
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: 'broker:29092'

  drone-producer:
    image: alexdamiao86/drone-producer:1.0.0
    container_name: drone-producer
    depends_on:
      - broker
    ports:
      - "8080:8080"
    environment:
      KAFKA_BROKER: 'broker:29092'
    networks:
      - drone-net

  drone-consumer:
    image: alexdamiao86/drone-consumer:1.0.0
    container_name: drone-consumer
    depends_on:
      - broker
    environment:
      KAFKA_BROKER: 'broker:29092'
    networks:
      - drone-net

  email-consumer:
    image: alexdamiao86/email-consumer:1.0.0
    container_name: email-consumer
    depends_on:
      - broker
    environment:
      KAFKA_BROKER: 'broker:29092'
      GMAIL_SERVER_USERNAME: ${GMAIL_SERVER_USERNAME}
      GMAIL_SERVER_PASSWORD: ${GMAIL_SERVER_PASSWORD}
      EMAIL_TO: ${EMAIL_TO}
    networks:
      - drone-net

networks:
  drone-net:
    driver: bridge